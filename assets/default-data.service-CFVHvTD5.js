import{d as s,N as a,l as t}from"./index-B1L31PPG.js";import{a as e,d as i}from"./defaultData-BR5V2V3r.js";import"./vendor-DImCB_rW.js";import"./db-CL8uhZCz.js";class n{static async importDefaults(t,n){const r={};let d=0,l=0;const o=n?e.filter(s=>n.includes(s.name)):e;for(const e of o){const t=await s.variableLists.where("name").equals(e.name).first();if(t){r[e.name]=t.id;continue}const i=a(),n=new Date;await s.variableLists.add({...e,id:i,created:n,updated:n}),r[e.name]=i,d++}const c=t?i.filter(s=>t.includes(s.name)):i;for(const e of c){if(await s.designs.where("name").equals(e.name).first())continue;const t=a(),i=new Date,n=await this.processVariableBindings(e.variableBindings,r);let d=e.refusalWordsListRef;!d&&e.refusalWords&&(d=r["Standard Refusal Patterns"]),await s.designs.add({...e,id:t,variableBindings:n,refusalWordsListRef:d,created:i,updated:i}),l++}return{designs:l,lists:d}}static async processVariableBindings(a,t){const e={...a};for(const[i,n]of Object.entries(e))if("list"===n.type&&n.listName){const a=t[n.listName];if(a){const t=await s.variableLists.get(a);t&&"simple"===t.category&&t.values?e[i]={type:"direct",values:[...t.values],source:{listId:t.id,listName:t.name}}:n.listId=a}else n.listId=""}return e}static async loadDefaultsOnFirstRun(){return 0===await s.variableLists.count()&&(t.info("Loading default variable lists and designs"),await this.importDefaults(),!0)}}export{n as DefaultDataService};
