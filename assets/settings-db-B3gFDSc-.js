import{ag as e,f as a,c as n}from"./vendor-BiapkIQZ.js";import{l as t}from"./db-CL8uhZCz.js";import{d as r}from"./index-JPKDQHeA.js";import{l as s}from"./logger.service-_k__GSpu.js";const i=e("settings",()=>{const e=a(!0),i=a({}),o=a({}),l=a({}),u=a("light");let c=null;const p=e=>{const a={openai:["openai-chat","openai-responses"],anthropic:["anthropic"],ollama:["ollama-chat","ollama-generate"],openrouter:["openrouter"]};if(i.value[e])return i.value[e];for(const[n,t]of Object.entries(a))if(t.includes(e)&&i.value[n])return i.value[n]},d=n(()=>Object.keys(i.value).length>0),m=a({"openai-chat":{enabled:!0},"openai-responses":{enabled:!0},anthropic:{enabled:!0},"ollama-chat":{enabled:!0},"ollama-generate":{enabled:!0},openrouter:{enabled:!0}}),v=n(()=>Object.entries(m.value).filter(([e,a])=>a.enabled).map(([e])=>e)),g=n(()=>[{id:"openai",name:"OpenAI",providers:["openai-chat","openai-responses"]},{id:"anthropic",name:"Anthropic",providers:["anthropic"]},{id:"ollama",name:"Ollama",providers:["ollama-chat","ollama-generate"]},{id:"openrouter",name:"OpenRouter",providers:["openrouter"]}].map(e=>({...e,hasKey:!!i.value[e.id]})));return async function(){await r.open();let a=await r.settings.get("main");a||(a={id:"main",apiKeys:{},customBaseUrls:{}},await r.settings.put(a)),i.value=a.apiKeys||{},o.value=a.customBaseUrls||{},l.value=a.providerConcurrency||{},u.value=a.theme||"light",c=t(()=>r.settings.get("main")).subscribe({next:a=>{a&&(i.value=a.apiKeys||{},o.value=a.customBaseUrls||{},l.value=a.providerConcurrency||{},u.value=a.theme||"light"),e.value=!1},error:a=>{s.error("Settings subscription error",a),e.value=!1}})}(),{isLoading:e,providers:m,enabledProviders:v,hasAnyApiKeys:d,apiKeyGroups:g,getApiKey:p,setApiKey:async function(e,a){const n=await r.settings.get("main");if(!n)return;const t={...n.apiKeys};a?t[e]=a:delete t[e],await r.settings.update("main",{apiKeys:t})},getBaseUrl:e=>o.value[e],setBaseUrl:async function(e,a){const n=await r.settings.get("main");if(!n)return;const t={...n.customBaseUrls};a?t[e]=a:delete t[e],await r.settings.update("main",{customBaseUrls:t})},getProviderConcurrency:e=>l.value[e],isProviderEnabled:e=>m.value[e]?.enabled??!1,setProviderEnabled:(e,a)=>{m.value[e]?m.value[e].enabled=a:m.value[e]={enabled:a}},hasApiKey:e=>!!p(e),setTheme:async function(e){await r.settings.update("main",{theme:e})},setProviderConcurrency:async function(e,a){const n=await r.settings.get("main"),t={...n?.providerConcurrency||{}};a>0&&a<=64?t[e]=a:delete t[e],await r.settings.update("main",{providerConcurrency:t})},cleanup:function(){c?.unsubscribe()}}});export{i as u};
