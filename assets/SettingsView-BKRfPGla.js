import{d as e,f as a,c as t,o as l,a6 as s,_ as i,k as n,V as o,a1 as r,Z as d,W as c,Y as u,a9 as v,F as p,a8 as m,a0 as f,G as g}from"./vendor-AtAbR8ZE.js";import{a as b,l as y,p as h,_}from"./index-CxzFzvUC.js";import{i as k}from"./feature-flags-DaxAZY-J.js";import"./db-CL8uhZCz.js";const w={class:"settings-view full-width","data-testid":"page-settings"},x={class:"api-key-label"},C={class:"provider-info spacing-top-xs"},E={class:"text-secondary"},P={class:"collapse-header"},z={class:"text-secondary"},I={class:"provider-label"},A=_(e({__name:"SettingsView",setup(e){const _=b(),A=v(),K=a([]),U=a([]),S=a([]),$=t({get:()=>_.financialCostsEnabled,set:e=>_.setFinancialCostsEnabled(e)}),q=a(k()),j=t({get:()=>_.environmentalCostsEnabled,set:e=>_.setEnvironmentalCostsEnabled(e)}),F=a("carbon"),T=a(["cars","phones"]),D=[{title:"Provider",dataIndex:"name",key:"name",width:150},{title:"Value",key:"input",width:100,align:"center"},{title:"Slider (1-64)",key:"slider",width:200,align:"center"}],M=t(()=>K.value.map(e=>{return{id:e.id,name:e.name,concurrency:(a=e.id,_.getProviderConcurrency(a)||G(a)),enabled:B(e.id)};var a})),L=t(()=>_.apiKeyGroups);function W(e){const a=K.value.find(a=>a.id===e);return a?.api.baseUrl||""}function B(e){return _.isProviderEnabled(e)}function G(e){const a=K.value.find(a=>a.id===e);return a?.execution?.defaultConcurrency||4}function O(e,a){_.setProviderConcurrency(e,a)}function R(){A.push("/environmental-config")}return l(async()=>{y.debug("onMounted start"),y.debug("Waiting for provider registry to load"),await h.waitForReady(),y.debug("Provider registry ready");const e=h.getAllProviders();y.debug("getAllProviders() returned",{providerCount:e.length}),y.debug("allProviders length",{count:e.length}),y.debug("allProviders IDs",{ids:e.map(e=>e.id)}),K.value=[...e],y.debug("providers.value after setting",{count:K.value.length}),y.debug("onMounted end")}),(e,a)=>{const t=c("a-tag"),l=c("a-alert"),v=c("a-input-password"),b=c("a-form-item"),y=c("a-col"),h=c("a-row"),k=c("a-form"),A=c("a-card"),G=c("a-switch"),V=c("a-input"),N=c("a-collapse-panel"),H=c("a-collapse"),Y=c("a-input-number"),Z=c("a-slider"),J=c("a-table"),Q=c("a-select-option"),X=c("a-select"),ee=c("a-checkbox"),ae=c("a-checkbox-group"),te=c("a-button");return u(),s("div",w,[a[20]||(a[20]=i("div",{class:"settings-header"},[i("h2",null,"Settings"),i("p",{class:"description"},"Configure API keys and provider settings for scientific model testing")],-1)),n(A,{title:"API Keys",class:"settings-card",size:"small"},{extra:d(()=>[n(t,{color:"green",size:"small"},{default:d(()=>[g(f(Object.values(L.value).filter(e=>e.hasKey).length)+" / "+f(Object.keys(L.value).length)+" configured ",1)]),_:1})]),default:d(()=>[n(l,{message:"Local Storage Only: API keys are stored locally in your browser and are never sent to auditomatic.org. API Keys only leave your browser as authentication to external LLM API providers, via encrypted HTTPS.",type:"info","show-icon":"",class:"spacing-bottom-md"}),n(k,{layout:"vertical",size:"small"},{default:d(()=>[n(h,{gutter:[16,16]},{default:d(()=>[(u(!0),s(p,null,m(L.value,e=>(u(),o(y,{key:e.id,span:12},{default:d(()=>[n(b,null,{label:d(()=>[i("div",x,[g(f(e.name)+" ",1),e.hasKey?(u(),o(t,{key:0,color:"success",size:"small"},{default:d(()=>a[6]||(a[6]=[g("✓ Configured")])),_:1,__:[6]})):(u(),o(t,{key:1,color:"default",size:"small"},{default:d(()=>a[7]||(a[7]=[g("Not configured")])),_:1,__:[7]}))])]),default:d(()=>{return[n(v,{value:(a=e.id,_.getApiKey(a)||""),onInput:a=>function(e,a){const t=a.target.value;_.setApiKey(e,t)}(e.id,a),placeholder:`Enter ${e.name} API key`,autocomplete:"off",size:"small",visibilityToggle:!0,"data-testid":`input-api-key-${e.id}`,"aria-label":`${e.name} API key input`},null,8,["value","onInput","placeholder","data-testid","aria-label"]),i("div",C,[i("small",E," Used by: "+f(e.providers.join(", ")),1)])];var a}),_:2},1024)]),_:2},1024))),128))]),_:1})]),_:1})]),_:1}),n(A,{class:"settings-card",size:"small"},{default:d(()=>[n(H,{activeKey:U.value,"onUpdate:activeKey":a[0]||(a[0]=e=>U.value=e),bordered:!1},{default:d(()=>[n(N,{key:"endpoints"},{header:d(()=>[i("div",P,[a[8]||(a[8]=i("span",{class:"collapse-title"},"Provider Endpoints",-1)),i("small",z,f(K.value.filter(e=>B(e.id)).length)+" enabled",1)])]),default:d(()=>[n(k,{layout:"vertical",size:"small"},{default:d(()=>[n(h,{gutter:[16,16]},{default:d(()=>[(u(!0),s(p,null,m(K.value,e=>(u(),o(y,{key:e.id,span:12},{default:d(()=>[n(b,null,{label:d(()=>[i("div",I,[g(f(e.name)+" ",1),n(G,{checked:B(e.id),onChange:a=>{return t=e.id,l=a,void _.setProviderEnabled(t,l);var t,l},size:"small","data-testid":`switch-provider-${e.id}`,"aria-label":`Enable or disable ${e.name} provider`},null,8,["checked","onChange","data-testid","aria-label"])])]),default:d(()=>{return[n(V,{value:(a=e.id,_.getBaseUrl(a)||""),onInput:a=>function(e,a){const t=a.target.value;_.setBaseUrl(e,t)}(e.id,a),placeholder:W(e.id),disabled:!B(e.id),size:"small","data-testid":`input-endpoint-${e.id}`,"aria-label":`${e.name} endpoint URL`},null,8,["value","onInput","placeholder","disabled","data-testid","aria-label"])];var a}),_:2},1024)]),_:2},1024))),128))]),_:1})]),_:1})]),_:1})]),_:1},8,["activeKey"])]),_:1}),n(A,{class:"settings-card",size:"small"},{default:d(()=>[n(H,{activeKey:S.value,"onUpdate:activeKey":a[1]||(a[1]=e=>S.value=e),bordered:!1},{default:d(()=>[n(N,{key:"concurrency"},{header:d(()=>a[9]||(a[9]=[i("div",{class:"collapse-header"},[i("span",{class:"collapse-title"},"Concurrency Settings"),i("small",{class:"text-secondary"},"Request limits per provider")],-1)])),default:d(()=>[n(J,{columns:D,"data-source":M.value,pagination:!1,size:"small",class:"scientific-table","row-key":"id"},{bodyCell:d(({column:e,record:a})=>["input"===e.key?(u(),o(Y,{key:0,value:a.concurrency,onChange:e=>O(a.id,e),min:1,max:64,disabled:!a.enabled,size:"small",style:{width:"80px"},"data-testid":`input-concurrency-${a.id}`,"aria-label":`Concurrency limit for ${a.name}`},null,8,["value","onChange","disabled","data-testid","aria-label"])):r("",!0),"slider"===e.key?(u(),o(Z,{key:1,value:a.concurrency,onChange:e=>O(a.id,e),min:1,max:64,disabled:!a.enabled,style:{width:"150px",margin:"0 auto"},size:"small"},null,8,["value","onChange","disabled"])):r("",!0)]),_:1},8,["data-source"])]),_:1})]),_:1},8,["activeKey"])]),_:1}),n(A,{title:"Financial Costs",class:"settings-card",size:"small"},{extra:d(()=>[n(t,{color:$.value?"green":"default",size:"small"},{default:d(()=>[g(f($.value?"Enabled":"Disabled"),1)]),_:1},8,["color"])]),default:d(()=>[n(l,{message:"Financial cost tracking shows estimated API costs for model usage. Enable this to see cost estimates throughout the application.",type:"info","show-icon":"",class:"spacing-bottom-md"}),n(k,{layout:"vertical",size:"small"},{default:d(()=>[n(b,{label:"Show Financial Costs"},{default:d(()=>[n(G,{checked:$.value,"onUpdate:checked":a[2]||(a[2]=e=>$.value=e),"data-testid":"switch-financial-costs","aria-label":"Enable or disable financial cost display"},null,8,["checked"]),a[10]||(a[10]=i("div",{class:"provider-info spacing-top-xs"},[i("small",{class:"text-secondary"}," Display financial costs for API calls in the interface ")],-1))]),_:1,__:[10]})]),_:1})]),_:1}),q.value?(u(),o(A,{key:0,title:"Environmental Impact",class:"settings-card",size:"small"},{extra:d(()=>[n(t,{color:j.value?"green":"default",size:"small"},{default:d(()=>[g(f(j.value?"Enabled":"Disabled"),1)]),_:1},8,["color"])]),default:d(()=>[n(l,{message:"Environmental cost tracking shows carbon footprint, water usage, and energy consumption for AI model usage. This is an experimental feature.",type:"info","show-icon":"",class:"spacing-bottom-md"}),n(k,{layout:"vertical",size:"small"},{default:d(()=>[n(b,{label:"Enable Environmental Cost Tracking"},{default:d(()=>[n(G,{checked:j.value,"onUpdate:checked":a[3]||(a[3]=e=>j.value=e),"data-testid":"switch-environmental-costs","aria-label":"Enable or disable environmental cost tracking"},null,8,["checked"]),a[11]||(a[11]=i("div",{class:"provider-info spacing-top-xs"},[i("small",{class:"text-secondary"}," Shows carbon, water, and energy costs alongside dollar costs ")],-1))]),_:1,__:[11]}),j.value?(u(),s(p,{key:0},[n(b,{label:"Primary Environmental Metric"},{default:d(()=>[n(X,{value:F.value,"onUpdate:value":a[4]||(a[4]=e=>F.value=e),style:{width:"200px"},size:"small","data-testid":"select-environmental-metric","aria-label":"Select primary environmental metric"},{default:d(()=>[n(Q,{value:"carbon"},{default:d(()=>a[12]||(a[12]=[g("Carbon Footprint")])),_:1,__:[12]}),n(Q,{value:"water"},{default:d(()=>a[13]||(a[13]=[g("Water Usage")])),_:1,__:[13]}),n(Q,{value:"energy"},{default:d(()=>a[14]||(a[14]=[g("Energy Consumption")])),_:1,__:[14]})]),_:1},8,["value"])]),_:1}),n(b,{label:"Show Equivalents"},{default:d(()=>[n(ae,{value:T.value,"onUpdate:value":a[5]||(a[5]=e=>T.value=e),"data-testid":"checkbox-group-equivalents","aria-label":"Select environmental equivalents to display"},{default:d(()=>[n(ee,{value:"cars","data-testid":"checkbox-equiv-cars"},{default:d(()=>a[15]||(a[15]=[g("Car Miles")])),_:1,__:[15]}),n(ee,{value:"trees","data-testid":"checkbox-equiv-trees"},{default:d(()=>a[16]||(a[16]=[g("Trees Needed")])),_:1,__:[16]}),n(ee,{value:"phones","data-testid":"checkbox-equiv-phones"},{default:d(()=>a[17]||(a[17]=[g("Phone Charges")])),_:1,__:[17]}),n(ee,{value:"bottles","data-testid":"checkbox-equiv-bottles"},{default:d(()=>a[18]||(a[18]=[g("Water Bottles")])),_:1,__:[18]})]),_:1},8,["value"])]),_:1}),n(b,null,{default:d(()=>[n(te,{type:"link",onClick:R,size:"small","data-testid":"btn-configure-environmental","aria-label":"Go to environmental cost configuration"},{default:d(()=>a[19]||(a[19]=[g(" Configure Environmental Cost Data → ")])),_:1,__:[19]})]),_:1})],64)):r("",!0)]),_:1})]),_:1})):r("",!0)])}}}),[["__scopeId","data-v-83c5ef07"]]);export{A as default};
