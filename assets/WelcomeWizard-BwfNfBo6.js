import{I as e,_ as a,k as t,C as s,n as o,e as l,O as i,t as n,a5 as r,y as d,o as c,R as p,d as u,a3 as v,Z as m,l as h}from"./index-Du1WcLqe.js";import{k as g,d as y,aa as f,a0 as k,F as b,ab as w,_,Y as C,Z as P,a3 as x,a2 as S,G as A,f as I,c as O,o as z,al as T,u as U,B as M,$ as W,X as B,W as L}from"./vendor-BsQOyEiA.js";import"./db-CL8uhZCz.js";var E={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M624 706.3h-74.1V464c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v242.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.7a8 8 0 0012.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9z"}},{tag:"path",attrs:{d:"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z"}}]},name:"cloud-download",theme:"outlined"};function D(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?Object(arguments[a]):{},s=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(t).filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),s.forEach(function(a){R(e,a,t[a])})}return e}function R(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}var j=function(a,t){var s=D({},a,t.attrs);return g(e,D({},s,{icon:E}),null)};j.displayName="CloudDownloadOutlined",j.inheritAttrs=!1;const N={class:"wizard-content"},$={class:"feature-grid-container"},G={class:"feature-grid"},F={class:"card-header"},Y={class:"feature-icon"},V={class:"wizard-nav"},H=a(y({__name:"WizardWelcome",emits:["next","skip"],setup(e){const a=[{icon:"🌐",title:"Browser Compatibility",description:"Safari is not well supported. Chrome and Firefox are preferred for best performance and compatibility.",isWarning:!0},{icon:"⚠️",title:"Experimental Beta",description:"Features may change at any time. Regularly export all data to files (CSV/Excel/JSON)",isWarning:!0},{icon:"⚠️",title:"Cost Warning",description:"Costs are estimates, response length varies, check provider billing.",isWarning:!0},{icon:"🌍",title:"Environmental Costs",description:"CO₂, water & energy shown alongside costs. Shows ?? when unknown to remind you of hidden impacts.",isWarning:!0},{icon:"⚡",title:"Performance",description:"Maxes out 1 CPU thread during runs. 1K prompts: 500MB RAM. 10K: 4GB RAM."},{icon:"💾",title:"Local Storage",description:"All data stored locally in your browser - no cloud uploads, complete privacy"},{icon:"🤖",title:"Multi-Provider",description:"Test across OpenAI, Anthropic, OpenRouter, Ollama, and more providers"},{icon:"📝",title:"Design Templates",description:"Create prompt templates with variables to test different scenarios systematically"},{icon:"🔄",title:"Variable Lists",description:"Define lists of test values that get substituted into your prompts automatically"},{icon:"🧪",title:"Run Trials",description:"Test multiple models and configurations with your variable combinations in parallel"},{icon:"📊",title:"Analyze Results",description:"View live progress, compare responses, and export data for further analysis"},{icon:"💰",title:"Cost Tracking",description:"Real-time cost estimation and tracking across all providers to monitor your API spending"}];return(e,t)=>{const s=C("a-button");return P(),f("div",N,[t[4]||(t[4]=k("div",{class:"wizard-header"},[k("h1",null,"Welcome to Auditomatic Lite"),k("p",{class:"tagline"},"Browser-Based Testing for Multiple LLM Providers")],-1)),k("div",$,[k("div",G,[(P(),f(b,null,w(a,e=>k("div",{key:e.title,class:x(["feature-card",{"warning-feature":e.isWarning}])},[k("div",F,[k("span",Y,S(e.icon),1),k("h3",null,S(e.title),1)]),k("p",null,S(e.description),1)],2)),64))])]),k("div",V,[g(s,{size:"large",onClick:t[0]||(t[0]=a=>e.$emit("skip"))},{default:_(()=>t[2]||(t[2]=[A(" I know what I'm doing → ")])),_:1,__:[2]}),g(s,{size:"large",type:"primary",onClick:t[1]||(t[1]=a=>e.$emit("next"))},{default:_(()=>t[3]||(t[3]=[A(" Get Started (2 min) ")])),_:1,__:[3]})])])}}}),[["__scopeId","data-v-b467b64d"]]),K={class:"wizard-content"},q={class:"providers-container"},Z={class:"providers-section"},J={class:"providers-grid"},X={class:"provider-config"},Q={class:"provider-config"},ee={class:"provider-config"},ae={class:"providers-section"},te={class:"providers-grid local-grid"},se={class:"provider-config ollama-config"},oe={key:0,class:"ollama-info"},le={key:1,class:"ollama-info"},ie={key:0,class:"ollama-not-found"},ne={key:1},re={class:"ollama-actions"},de={key:2,class:"ollama-info connected"},ce={class:"model-preview"},pe={key:0,class:"more-models"},ue={class:"wizard-nav"},ve=a(y({__name:"WizardProviders",emits:["next","back"],setup(e,{emit:a}){const l=a,i=t(),n=I([]),r=I(!1),d=I(!1),c=I({openai:!1,anthropic:!1,openrouter:!1,ollama:!1}),p=I({openai:!1,anthropic:!1,openrouter:!1}),u=O(()=>i.providers.ollama.detected?{detected:!0,text:"Connected"}:{detected:!1,text:"Not detected"}),v=O(()=>!(i.providers.openai.enabled&&!i.providers.openai.key)&&(!(i.providers.anthropic.enabled&&!i.providers.anthropic.key)&&(!(i.providers.openrouter.enabled&&!i.providers.openrouter.key)&&(!(i.providers.ollama.enabled&&!i.providers.ollama.detected)&&i.hasAnyProvider))));function m(e){"openai"===e?i.providers.openai.enabled=!i.providers.openai.enabled:"anthropic"===e?i.providers.anthropic.enabled=!i.providers.anthropic.enabled:"openrouter"===e?i.providers.openrouter.enabled=!i.providers.openrouter.enabled:"ollama"===e?(i.providers.ollama.enabled=!i.providers.ollama.enabled,i.providers.ollama.enabled&&!u.value.detected&&L()):"deterministic"===e&&(i.providers.deterministic.enabled=!i.providers.deterministic.enabled)}async function h(){c.value.openai=!0;const e=await i.testProvider("openai");c.value.openai=!1,e?p.value.openai=!0:(p.value.openai=!1,o.error("Please enter an API key"))}async function y(){c.value.anthropic=!0;const e=await i.testProvider("anthropic");c.value.anthropic=!1,e?p.value.anthropic=!0:(p.value.anthropic=!1,o.error("Please enter an API key"))}async function B(){c.value.openrouter=!0;const e=await i.testProvider("openrouter");c.value.openrouter=!1,e?p.value.openrouter=!0:(p.value.openrouter=!1,o.error("Please enter an API key"))}async function L(){c.value.ollama=!0,r.value=!0;const e=await i.detectOllama();n.value=e.map(e=>e.name||e),c.value.ollama=!1,i.providers.ollama.detected?o.success("Ollama connected!"):o.warning("Ollama not found. Make sure Ollama is installed and running.")}function E(){if(!v.value){if(i.providers.ollama.enabled&&!i.providers.ollama.detected)return void o.error("Cannot continue: Ollama is selected but not detected. Please install and start Ollama, or deselect it.");const e=[];return i.providers.openai.enabled&&!i.providers.openai.key&&e.push("OpenAI"),i.providers.anthropic.enabled&&!i.providers.anthropic.key&&e.push("Anthropic"),i.providers.openrouter.enabled&&!i.providers.openrouter.key&&e.push("OpenRouter"),e.length>0?void o.error(`Cannot continue: Missing API keys for ${e.join(", ")}`):void o.warning("Please configure at least one provider")}l("next")}return z(()=>{}),(e,a)=>{const t=C("a-checkbox"),o=C("a-input"),l=C("a-button"),I=C("a-tooltip"),O=C("a-card"),z=C("a-alert");return P(),f("div",K,[a[49]||(a[49]=T('<div class="wizard-header" data-v-6609c664><h2 data-v-6609c664>Connect to AI Providers <span class="header-subtitle" data-v-6609c664>Select the AI services you want to use. You can add more later in Settings.</span></h2></div><div class="wizard-progress" data-v-6609c664><div class="progress-step completed" data-v-6609c664>1. Welcome</div><div class="progress-step active" data-v-6609c664>2. Providers</div><div class="progress-step" data-v-6609c664>3. Models</div><div class="progress-step" data-v-6609c664>4. Start</div></div>',2)),k("div",q,[k("div",Z,[a[34]||(a[34]=k("h3",{class:"section-title"},"☁️ Cloud Providers",-1)),k("div",J,[g(O,{class:x(["provider-card",{selected:U(i).providers.openai.enabled,"has-error":d.value&&U(i).providers.openai.enabled&&!U(i).providers.openai.key}])},{default:_(()=>[k("div",{class:"provider-header",onClick:a[3]||(a[3]=e=>m("openai"))},[g(t,{checked:U(i).providers.openai.enabled,"onUpdate:checked":a[0]||(a[0]=e=>U(i).providers.openai.enabled=e),onClick:a[1]||(a[1]=M(()=>{},["stop"]))},null,8,["checked"]),a[28]||(a[28]=k("div",{class:"provider-info"},[k("h4",null,"OpenAI"),k("span",{class:"provider-models"},"GPT-3.5, GPT-4, O1 models via Chat Completions API")],-1)),k("a",{href:"https://platform.openai.com/api-keys",target:"_blank",onClick:a[2]||(a[2]=M(()=>{},["stop"])),class:"api-link"}," API → ")]),k("div",X,[g(o,{value:U(i).providers.openai.key,"onUpdate:value":a[4]||(a[4]=e=>U(i).providers.openai.key=e),placeholder:U(i).providers.openai.key?"••••••••":"sk-...",type:"password",autocomplete:"one-time-code",onBlur:h,onFocus:a[5]||(a[5]=()=>U(i).providers.openai.enabled=!0),onInput:a[6]||(a[6]=()=>{U(i).providers.openai.enabled||(U(i).providers.openai.enabled=!0)})},null,8,["value","placeholder"]),g(I,{title:p.value.openai?"API key verified":"Test connection with a simple prompt. Cost: ~$0.0001",placement:"top"},{default:_(()=>[g(l,{onClick:M(h,["stop"]),loading:c.value.openai,disabled:!U(i).providers.openai.enabled||!U(i).providers.openai.key,type:(p.value.openai,"default"),class:x({"tested-success":p.value.openai})},{default:_(()=>[p.value.openai?(P(),f(b,{key:0},[g(U(s)),a[29]||(a[29]=A(" Working "))],64)):(P(),f(b,{key:1},[A("Test")],64))]),_:1},8,["loading","disabled","type","class"])]),_:1},8,["title"])])]),_:1},8,["class"]),g(O,{class:x(["provider-card",{selected:U(i).providers.anthropic.enabled,"has-error":d.value&&U(i).providers.anthropic.enabled&&!U(i).providers.anthropic.key}])},{default:_(()=>[k("div",{class:"provider-header",onClick:a[10]||(a[10]=e=>m("anthropic"))},[g(t,{checked:U(i).providers.anthropic.enabled,"onUpdate:checked":a[7]||(a[7]=e=>U(i).providers.anthropic.enabled=e),onClick:a[8]||(a[8]=M(()=>{},["stop"]))},null,8,["checked"]),a[30]||(a[30]=k("div",{class:"provider-info"},[k("h4",null,"Anthropic"),k("span",{class:"provider-models"},"Claude 3-4 Haiku, Sonnet, Opus via Messages API")],-1)),k("a",{href:"https://console.anthropic.com/settings/keys",target:"_blank",onClick:a[9]||(a[9]=M(()=>{},["stop"])),class:"api-link"}," API → ")]),k("div",Q,[g(o,{value:U(i).providers.anthropic.key,"onUpdate:value":a[11]||(a[11]=e=>U(i).providers.anthropic.key=e),placeholder:U(i).providers.anthropic.key?"••••••••":"sk-ant-...",type:"password",autocomplete:"one-time-code",onBlur:y,onFocus:a[12]||(a[12]=()=>U(i).providers.anthropic.enabled=!0),onInput:a[13]||(a[13]=()=>{U(i).providers.anthropic.enabled||(U(i).providers.anthropic.enabled=!0)})},null,8,["value","placeholder"]),g(I,{title:p.value.anthropic?"API key verified":"Test connection with a simple prompt. Cost: ~$0.0001",placement:"top"},{default:_(()=>[g(l,{onClick:M(y,["stop"]),loading:c.value.anthropic,disabled:!U(i).providers.anthropic.enabled||!U(i).providers.anthropic.key,type:(p.value.anthropic,"default"),class:x({"tested-success":p.value.anthropic})},{default:_(()=>[p.value.anthropic?(P(),f(b,{key:0},[g(U(s)),a[31]||(a[31]=A(" Working "))],64)):(P(),f(b,{key:1},[A("Test")],64))]),_:1},8,["loading","disabled","type","class"])]),_:1},8,["title"])])]),_:1},8,["class"]),g(O,{class:x(["provider-card",{selected:U(i).providers.openrouter.enabled}])},{default:_(()=>[k("div",{class:"provider-header",onClick:a[17]||(a[17]=e=>m("openrouter"))},[g(t,{checked:U(i).providers.openrouter.enabled,"onUpdate:checked":a[14]||(a[14]=e=>U(i).providers.openrouter.enabled=e),onClick:a[15]||(a[15]=M(()=>{},["stop"]))},null,8,["checked"]),a[32]||(a[32]=k("div",{class:"provider-info"},[k("h4",null,"OpenRouter"),k("span",{class:"provider-models"},"200+ models (OpenAI, Anthropic, Google, Meta, more) with one API key and bill")],-1)),k("a",{href:"https://openrouter.ai/keys",target:"_blank",onClick:a[16]||(a[16]=M(()=>{},["stop"])),class:"api-link"}," API → ")]),k("div",ee,[g(o,{value:U(i).providers.openrouter.key,"onUpdate:value":a[18]||(a[18]=e=>U(i).providers.openrouter.key=e),placeholder:U(i).providers.openrouter.key?"••••••••":"sk-or-...",type:"password",autocomplete:"one-time-code",onBlur:B,onFocus:a[19]||(a[19]=()=>U(i).providers.openrouter.enabled=!0),onInput:a[20]||(a[20]=()=>{U(i).providers.openrouter.enabled||(U(i).providers.openrouter.enabled=!0)})},null,8,["value","placeholder"]),g(I,{title:p.value.openrouter?"API key verified":"Test connection with a simple prompt. Cost: ~$0.0001",placement:"top"},{default:_(()=>[g(l,{onClick:M(B,["stop"]),loading:c.value.openrouter,disabled:!U(i).providers.openrouter.enabled||!U(i).providers.openrouter.key,type:(p.value.openrouter,"default"),class:x({"tested-success":p.value.openrouter})},{default:_(()=>[p.value.openrouter?(P(),f(b,{key:0},[g(U(s)),a[33]||(a[33]=A(" Working "))],64)):(P(),f(b,{key:1},[A("Test")],64))]),_:1},8,["loading","disabled","type","class"])]),_:1},8,["title"])])]),_:1},8,["class"])])]),k("div",ae,[a[46]||(a[46]=k("h3",{class:"section-title"},"💻 Local Options",-1)),k("div",te,[g(O,{class:x(["provider-card",{selected:U(i).providers.ollama.enabled}])},{default:_(()=>[k("div",{class:"provider-header",onClick:a[23]||(a[23]=e=>m("ollama"))},[g(t,{checked:U(i).providers.ollama.enabled,"onUpdate:checked":a[21]||(a[21]=e=>U(i).providers.ollama.enabled=e),onClick:a[22]||(a[22]=M(()=>{},["stop"]))},null,8,["checked"]),a[35]||(a[35]=k("div",{class:"provider-info"},[k("h4",null,"Ollama"),k("span",{class:"provider-models"},"Free, private, runs on your computer")],-1)),k("span",{class:x(["status-text",{connected:u.value.detected}])},S(u.value.detected?"✓":"○"),3)]),k("div",se,[U(i).providers.ollama.enabled?u.value.detected?(P(),f("div",de,[a[42]||(a[42]=k("p",null,[k("strong",null,"✓ Connected!"),A(" Ollama is running")],-1)),k("div",ce,[(P(!0),f(b,null,w(n.value.slice(0,3),e=>(P(),f("span",{key:e,class:"model-name"},S(e),1))),128)),n.value.length>3?(P(),f("span",pe," +"+S(n.value.length-3)+" more ",1)):W("",!0)]),g(l,{onClick:L,loading:c.value.ollama,size:"small"},{default:_(()=>a[41]||(a[41]=[A(" Refresh ")])),_:1,__:[41]},8,["loading"])])):(P(),f("div",le,[r.value&&!u.value.detected?(P(),f("div",ie,[g(z,{type:"warning","show-icon":"",class:"ollama-alert"},{message:_(()=>a[37]||(a[37]=[k("strong",null,"Ollama Not Found",-1)])),description:_(()=>a[38]||(a[38]=[k("p",null,"Ollama is not running on your system. To use Ollama:",-1),k("ol",null,[k("li",null,[A("Download and install Ollama from "),k("a",{href:"https://ollama.ai",target:"_blank"},"ollama.ai")]),k("li",null,"Start Ollama (it runs in the background)"),k("li",null,'Click "Retry Detection" below')],-1),k("p",{class:"warning-note"},"⚠️ You cannot continue with Ollama selected until it's detected.",-1)])),_:1})])):(P(),f("div",ne,a[39]||(a[39]=[k("p",null,"Ollama lets you run AI models locally - no API keys, no costs, completely private.",-1)]))),k("div",re,[g(l,{onClick:L,loading:c.value.ollama},{default:_(()=>[A(S(r.value?"Retry Detection":"Detect Ollama"),1)]),_:1},8,["loading"]),a[40]||(a[40]=k("a",{href:"https://ollama.ai",target:"_blank",class:"install-link"}," Download Ollama → ",-1))])])):(P(),f("div",oe,a[36]||(a[36]=[k("p",null,"No API keys needed, but requires installation with admin privileges.",-1),k("a",{href:"https://ollama.com",target:"_blank",class:"install-link"}," Learn more → ",-1)])))])]),_:1},8,["class"]),g(O,{class:x(["provider-card",{selected:U(i).providers.deterministic.enabled}])},{default:_(()=>[k("div",{class:"provider-header",onClick:a[26]||(a[26]=e=>m("deterministic"))},[g(t,{checked:U(i).providers.deterministic.enabled,"onUpdate:checked":a[24]||(a[24]=e=>U(i).providers.deterministic.enabled=e),onClick:a[25]||(a[25]=M(()=>{},["stop"]))},null,8,["checked"]),a[43]||(a[43]=k("div",{class:"provider-info"},[k("h4",null,"Deterministic (Testing)"),k("span",{class:"provider-models"},"Built-in models for testing, no API needed")],-1)),a[44]||(a[44]=k("span",{class:"status-text connected"}," ✓ ",-1))]),a[45]||(a[45]=k("div",{class:"provider-config ollama-config"},[k("div",{class:"ollama-info"},[k("p",null,'Perfect for testing workflows without using API credits. Includes models like "echo" and "vader" for predictable outputs.')])],-1))]),_:1,__:[45]},8,["class"])])])]),k("div",ue,[g(l,{size:"large",onClick:a[27]||(a[27]=a=>e.$emit("back"))},{default:_(()=>a[47]||(a[47]=[A(" ← Back ")])),_:1,__:[47]}),g(l,{size:"large",type:"primary",onClick:E,disabled:!v.value},{default:_(()=>a[48]||(a[48]=[A(" Continue → ")])),_:1,__:[48]},8,["disabled"])])])}}}),[["__scopeId","data-v-6609c664"]]),me={class:"environmental-section"},he={class:"env-header"},ge={class:"example-container"},ye={class:"cost-widget"},fe={class:"enviro-group"},ke={class:"enviro-item"},be={class:"enviro-item"},we={class:"enviro-item"},_e={class:"env-toggle"},Ce={class:"toggle-container"},Pe=a(y({__name:"EnvironmentalCostsSection",setup(e){const a=l(),t=I(!1);async function s(e){await a.setEnvironmentalCostsEnabled(e)}return z(()=>{t.value=a.environmentalCostsEnabled}),(e,a)=>{const o=C("a-switch");return P(),f("div",me,[k("div",he,[a[7]||(a[7]=k("h3",null,"Environmental Costs",-1)),k("div",ge,[a[6]||(a[6]=k("span",{class:"example-label"},"Example:",-1)),k("div",ye,[a[5]||(a[5]=T('<span class="cost-label" data-v-cb7050b5>Estimated cost:</span><span class="cost-group" data-v-cb7050b5><span class="cost-value" data-v-cb7050b5>$0.003</span> - <span class="cost-value" data-v-cb7050b5>$0.01</span></span><span class="cost-tab" data-v-cb7050b5></span>',3)),k("span",fe,[k("span",ke,"CO₂ "+S(t.value?"2.5g":"??"),1),a[3]||(a[3]=k("span",{class:"cost-tab"},null,-1)),k("span",be,"💧"+S(t.value?"0.3L":"??"),1),a[4]||(a[4]=k("span",{class:"cost-tab"},null,-1)),k("span",we,"⚡"+S(t.value?"1.2kWh":"??"),1)])])])]),a[11]||(a[11]=k("div",{class:"env-description"},[k("p",null,"When selecting a model, we always show financial costs (your API bill) alongside environmental impacts (CO₂, water, energy). This cannot be hidden."),k("p",null,"This is a beta feature and our data is very inaccurate. We recommend using '??' placeholders so you keep these costs in mind, until the feature is out of beta.")],-1)),k("div",_e,[k("div",Ce,[k("div",{class:x(["toggle-option",{active:!t.value}]),onClick:a[0]||(a[0]=e=>{t.value=!1,s(!1)})},a[8]||(a[8]=[k("strong",null,'Show "??"',-1),k("span",null,"Keep environmental costs in mind with ?? placeholders",-1)]),2),g(o,{checked:t.value,"onUpdate:checked":a[1]||(a[1]=e=>t.value=e),onChange:s,size:"default"},null,8,["checked"]),k("div",{class:x(["toggle-option",{active:t.value}]),onClick:a[2]||(a[2]=e=>{t.value=!0,s(!0)})},a[9]||(a[9]=[k("strong",null,"Show Estimates",-1),k("span",null,"Use beta estimates (very inaccurate, not currently recommended)",-1)]),2)]),a[10]||(a[10]=k("div",{class:"toggle-note"},[k("p",null,[k("em",null,"There is no option to only show financial costs and hide the ?? environmental cost display. You can change this later in Settings.")])],-1))])])}}}),[["__scopeId","data-v-cb7050b5"]]),xe={class:"wizard-content"},Se={class:"models-content"},Ae={class:"model-update-card"},Ie={class:"card-header"},Oe={class:"card-header-left"},ze={class:"card-status"},Te={key:0,class:"status-text"},Ue={class:"card-body"},Me={class:"update-info"},We={class:"info-item"},Be={class:"info-item"},Le={class:"info-item"},Ee={class:"info-item"},De={class:"success-message"},Re={class:"error-message"},je={class:"card-footer"},Ne={class:"wizard-nav"},$e=a(y({__name:"WizardModels",emits:["next","back"],setup(e){const a=t();async function o(){await a.fetchModelPricing()}function l(){a.modelUpdate.error=null,a.modelUpdate.started=!1,o()}function u(){a.nextStep()}return(e,t)=>{const v=C("a-button"),m=C("a-progress"),h=C("a-space");return P(),f("div",xe,[t[18]||(t[18]=T('<div class="wizard-header" data-v-4964c791><h2 data-v-4964c791>Models &amp; Options <span class="header-subtitle" data-v-4964c791>Keep your model list up to date and configure environmental tracking</span></h2></div><div class="wizard-progress" data-v-4964c791><div class="progress-step completed" data-v-4964c791>1. Welcome</div><div class="progress-step completed" data-v-4964c791>2. Providers</div><div class="progress-step active" data-v-4964c791>3. Models &amp; Options</div><div class="progress-step" data-v-4964c791>4. Start</div></div>',2)),k("div",Se,[k("div",Ae,[k("div",Ie,[k("div",Oe,[k("h3",null,[g(U(j)),t[2]||(t[2]=A(" Model Database"))]),k("div",ze,[U(a).modelUpdate.started?U(a).modelUpdate.loading?(P(),f(b,{key:1},[g(U(i),{spin:""}),t[3]||(t[3]=k("span",{class:"status-text"},"Updating...",-1))],64)):U(a).modelUpdate.completed?(P(),f(b,{key:2},[g(U(s),{class:"status-icon success"}),t[4]||(t[4]=k("span",{class:"status-text"},"Updated",-1))],64)):U(a).modelUpdate.error?(P(),f(b,{key:3},[g(U(n),{class:"status-icon error"}),t[5]||(t[5]=k("span",{class:"status-text"},"Failed",-1))],64)):W("",!0):(P(),f("span",Te,"Not updated"))])]),g(v,{type:"primary",onClick:o,loading:U(a).modelUpdate.loading,size:"small"},{default:_(()=>[g(U(c)),t[6]||(t[6]=A(" Update Models "))]),_:1,__:[6]},8,["loading"])]),k("div",Ue,[U(a).modelUpdate.started?U(a).modelUpdate.loading?(P(),f(b,{key:1},[g(m,{percent:U(a).modelUpdate.progress,"show-info":!1,size:"small","stroke-color":{"0%":"#108ee9","100%":"#87d068"}},null,8,["percent"]),t[12]||(t[12]=k("p",{class:"progress-text"},"Discovering models from all configured sources...",-1))],64)):U(a).modelUpdate.completed?(P(),f(b,{key:2},[k("p",De,S(U(a).modelUpdate.summary),1),t[13]||(t[13]=k("p",{class:"info-text"},"You can view all models in the Models page after setup.",-1))],64)):U(a).modelUpdate.error?(P(),f(b,{key:3},[k("p",Re,S(U(a).modelUpdate.error),1),g(v,{size:"small",onClick:l},{default:_(()=>[g(U(p)),t[14]||(t[14]=A(" Retry "))]),_:1,__:[14]})],64)):W("",!0):(P(),f(b,{key:0},[t[11]||(t[11]=k("p",null,[A("We'll fetch model information from multiple sources including "),k("a",{href:"https://github.com/BerriAI/litellm",target:"_blank"},"LiteLLM"),A(" and provider APIs.")],-1)),k("div",Me,[k("span",We,[g(U(r)),t[7]||(t[7]=A(" Model capabilities & pricing"))]),k("span",Be,[g(U(r)),t[8]||(t[8]=A(" Context limits & features"))]),k("span",Le,[g(U(r)),t[9]||(t[9]=A(" Provider-specific models"))]),k("span",Ee,[g(U(r)),t[10]||(t[10]=A(" Deterministic test models"))])])],64))]),k("div",je,[g(U(d)),t[15]||(t[15]=k("span",null,"You can update model pricing anytime from the Models page",-1))])]),g(Pe)]),k("div",Ne,[g(v,{size:"large",onClick:t[0]||(t[0]=a=>e.$emit("back"))},{default:_(()=>t[16]||(t[16]=[A(" ← Back ")])),_:1,__:[16]}),g(h,null,{default:_(()=>[g(v,{size:"large",onClick:u},{default:_(()=>t[17]||(t[17]=[A(" Skip for Now ")])),_:1,__:[17]}),g(v,{size:"large",type:"primary",onClick:t[1]||(t[1]=a=>e.$emit("next")),disabled:U(a).modelUpdate.loading},{default:_(()=>[A(S(U(a).modelUpdate.completed?"Continue":"Skip Update")+" → ",1)]),_:1},8,["disabled"])]),_:1})])])}}}),[["__scopeId","data-v-4964c791"]]),Ge={class:"wizard-content"},Fe={class:"wizard-header"},Ye={class:"setup-summary"},Ve={class:"summary-grid"},He={key:0,class:"summary-item"},Ke={class:"summary-value"},qe={key:1,class:"summary-item"},Ze={class:"summary-value"},Je={key:2,class:"summary-item"},Xe={class:"summary-value"},Qe={class:"main-content"},ea={class:"guide-container"},aa={class:"guide-nav"},ta=["onClick"],sa={class:"guide-content"},oa={class:"guide-card"},la=["innerHTML"],ia={class:"wizard-footer"},na={class:"wizard-nav"},ra=a(y({__name:"WizardComplete",emits:["complete"],setup(e,{emit:a}){const o=a,l=t(),i=u(),n=I(!0),r=I(0),d=[{title:"Playground",subtitle:"Start easy with a single prompt to a single LLM",description:"The playground is perfect for quick experimentation, before you design a prompt with variables and run a systematic experimental trial. Enter a single prompt, select a model, adjust optional model parameters (like temperature or max response length), and see the LLM API response.",route:"/playground"},{title:"Variables",subtitle:"Create lists of conditions in a variable list",description:"Build lists of test values that will be systematically substituted into your prompts. Create simple lists (e.g., 50 first names) or attributed lists (e.g., names with gender and ethnicity attributes). Import from CSV, paste from spreadsheets, or enter manually. These become the {{variables}} in your prompt templates.",route:"/variables"},{title:"Template",subtitle:"Create a prompt and substitute in variable placeholders",description:'Write reusable prompt templates with {{variable}} placeholders that get filled from your variable lists.\n\nAdd regex patterns to extract key information from responses (e.g., "\\d+" to extract the last number).\n\nOne template can be tested across multiple model configurations.',route:"/templates"},{title:"Trial",subtitle:"With a template, test one or more LLM API configurations",description:"Execute systematic experiments by running your template across all variable combinations with multiple models. Configure different temperature settings, compare GPT-4 vs Claude vs Gemini on the same prompts, monitor real-time progress and costs, then analyze results with pivot tables to find patterns and model differences.",route:"/trials"},{title:"Spreadsheet (beta)",subtitle:"Import CSV with one prompt per row, test with one LLM",description:"Skip variable lists and templates—import a CSV where each row contains a complete prompt. Select one model, configure parameters, and run all prompts in sequence. Export results back to CSV with responses in adjacent columns. Perfect for testing existing prompt datasets or when your prompts don't follow a template pattern.",route:"/spreadsheet"}],c=O(()=>i.models.filter(e=>!(!l.providers.openai.enabled||"openai"!==e.provider)||(!(!l.providers.anthropic.enabled||"anthropic"!==e.provider)||(!(!l.providers.openrouter.enabled||"openrouter"!==e.provider)||!(!l.providers.ollama.enabled||"ollama"!==e.provider)))).length);function p(){l.previousStep()}function v(){n.value&&localStorage.setItem("wizard.dontShowAgain","true"),o("complete")}return(e,a)=>{const t=C("a-tag"),o=C("router-link"),i=C("a-checkbox"),u=C("a-button");return P(),f("div",Ge,[k("div",Fe,[g(U(s),{class:"success-icon"}),a[1]||(a[1]=k("h2",null,"You're All Set!",-1)),a[2]||(a[2]=k("p",null,"Everything is configured and ready to go",-1))]),k("div",Ye,[a[6]||(a[6]=k("h3",null,"Your Configuration",-1)),k("div",Ve,[U(l).enabledProviders.length?(P(),f("div",He,[a[3]||(a[3]=k("strong",null,"Providers:",-1)),k("div",Ke,[(P(!0),f(b,null,w(U(l).enabledProviders,e=>(P(),B(t,{key:e},{default:_(()=>[A(S(e),1)]),_:2},1024))),128))])])):W("",!0),c.value?(P(),f("div",qe,[a[4]||(a[4]=k("strong",null,"Available Models:",-1)),k("div",Ze,S(c.value)+" models ready",1)])):W("",!0),U(l).providers.testing.enabled?(P(),f("div",Je,[a[5]||(a[5]=k("strong",null,"Testing Tools:",-1)),k("div",Xe,S(U(l).providers.testing.models.length)+" debug models enabled ",1)])):W("",!0)])]),k("div",Qe,[a[7]||(a[7]=k("h3",null,"Getting Started Guide",-1)),k("div",ea,[k("div",aa,[(P(),f(b,null,w(d,(e,a)=>k("div",{key:e.title,class:x(["guide-nav-item",{active:r.value===a}]),onClick:e=>r.value=a},[k("strong",null,S(e.title)+":",1),k("span",null,S(e.subtitle),1)],10,ta)),64))]),k("div",sa,[k("div",oa,[k("h4",null,S(d[r.value].title),1),k("div",{class:"guide-description",innerHTML:(m=d[r.value].description,m.split("\n\n").map(e=>`<p>${e}</p>`).join(""))},null,8,la),g(o,{to:d[r.value].route,class:"guide-link"},{default:_(()=>[A(" Go to "+S(d[r.value].title)+" → ",1)]),_:1},8,["to"])])])])]),k("div",ia,[g(i,{checked:n.value,"onUpdate:checked":a[0]||(a[0]=e=>n.value=e)},{default:_(()=>a[8]||(a[8]=[A(" Don't show this wizard on startup ")])),_:1,__:[8]},8,["checked"])]),k("div",na,[g(u,{size:"large",onClick:p},{default:_(()=>a[9]||(a[9]=[A(" ← Back ")])),_:1,__:[9]}),g(u,{size:"large",type:"primary",onClick:v},{default:_(()=>a[10]||(a[10]=[A(" Get Started → ")])),_:1,__:[10]})])]);var m}}}),[["__scopeId","data-v-17a2802a"]]),da={class:"welcome-wizard"},ca={class:"wizard-container"},pa=a(y({__name:"WelcomeWizard",setup(e){const a=L(),s=t();async function l(){s.skip(),await a.push("/")}async function i(){s.hasAnyProvider||0===s.currentStep?await a.push("/"):m.confirm({title:"Exit Setup?",content:"You haven't configured any AI providers yet. You can always set them up later in Settings.",okText:"Exit Anyway",cancelText:"Stay",onOk:async()=>{await a.push("/")}})}let n=!1;async function r(){if(!n){n=!0;try{await s.completeWizard(),await new Promise(e=>setTimeout(e,300)),"tour"===s.tourChoice?(o.info("Interactive tour coming soon! Taking you to the playground..."),await a.push("/playground")):"playground"===s.tourChoice?await a.push("/playground"):await a.push("/")}catch(e){h.error("Failed to complete wizard:",e),o.error("Failed to save settings. Please try again."),n=!1}}}return z(async()=>{await s.initialize()}),(e,a)=>{const t=C("a-button");return P(),f("div",da,[k("div",ca,[g(t,{class:"wizard-close",type:"text",shape:"circle",onClick:i},{icon:_(()=>[g(U(v))]),_:1}),0===U(s).currentStep?(P(),B(H,{key:0,onNext:U(s).nextStep,onSkip:l},null,8,["onNext"])):1===U(s).currentStep?(P(),B(ve,{key:1,onNext:U(s).nextStep,onBack:U(s).previousStep},null,8,["onNext","onBack"])):2===U(s).currentStep?(P(),B($e,{key:2,onNext:U(s).nextStep,onBack:U(s).previousStep},null,8,["onNext","onBack"])):3===U(s).currentStep?(P(),B(ra,{key:3,onComplete:r})):W("",!0)])])}}}),[["__scopeId","data-v-52d1074b"]]);export{pa as default};
