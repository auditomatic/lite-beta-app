import{z as s,f as a,a5 as e,y as t,l as i}from"./index-BTLG4nFQ.js";import"./vendor-BKA9Ybw0.js";import"./db-CL8uhZCz.js";class n{static async importDefaults(i,n){const r={};let l=0,d=0;const o=n?s.filter(s=>n.includes(s.name)):s;for(const s of o){const t=await a.variableLists.where("name").equals(s.name).first();if(t){r[s.name]=t.id;continue}const i=e(),n=new Date;await a.variableLists.add({...s,id:i,created:n,updated:n}),r[s.name]=i,l++}const c=i?t.filter(s=>i.includes(s.name)):t;for(const s of c){if(await a.designs.where("name").equals(s.name).first())continue;const t=e(),i=new Date,n=await this.processVariableBindings(s.variableBindings,r);let l=s.refusalWordsListRef;!l&&s.refusalWords&&(l=r["Standard Refusal Patterns"]),await a.designs.add({...s,id:t,variableBindings:n,refusalWordsListRef:l,created:i,updated:i}),d++}return{designs:d,lists:l}}static async processVariableBindings(s,e){const t={...s};for(const[i,n]of Object.entries(t))if("list"===n.type&&n.listName){const s=e[n.listName];if(s){const e=await a.variableLists.get(s);e&&"simple"===e.category&&e.values?t[i]={type:"direct",values:[...e.values],source:{listId:e.id,listName:e.name}}:n.listId=s}else n.listId=""}return t}static async loadDefaultsOnFirstRun(){return 0===await a.variableLists.count()&&(i.info("Loading default variable lists and designs"),await this.importDefaults(),!0)}}export{n as DefaultDataService};
