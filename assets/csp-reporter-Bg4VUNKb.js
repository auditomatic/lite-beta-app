var r=Object.defineProperty;var c=(e,i,o)=>i in e?r(e,i,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[i]=o;var s=(e,i,o)=>c(e,typeof i!="symbol"?i+"":i,o);import{a as n}from"./index-Be9cnb4G.js";class a{constructor(){s(this,"violations",[]);s(this,"maxViolations",100)}recordViolation(i){const o={timestamp:new Date,violation:i,userAgent:navigator.userAgent,resolved:!1};this.violations.unshift(o),this.violations.length>this.maxViolations&&(this.violations=this.violations.slice(0,this.maxViolations)),this.analyzeViolation(i)}getStats(){const i={total:this.violations.length,byDirective:{},bySource:{},recent:this.violations.slice(0,10)};for(const o of this.violations){const t=o.violation["violated-directive"];i.byDirective[t]=(i.byDirective[t]||0)+1;const l=o.violation["blocked-uri"]||"unknown";i.bySource[l]=(i.bySource[l]||0)+1}return i}clearViolations(){this.violations=[]}logViolation(i){const{violation:o}=i;console.group(`%c⚠️ CSP Violation: ${o["violated-directive"]}`,"color: orange; font-weight: bold"),n.info("Blocked URI:",o["blocked-uri"]),o["source-file"]&&n.info("Source:",`${o["source-file"]}:${o["line-number"]}:${o["column-number"]}`),n.info("Document:",o["document-uri"]),n.info("Policy:",o["original-policy"]),n.info("Time:",i.timestamp.toISOString()),console.groupEnd()}analyzeViolation(i){const o=i["violated-directive"],t=i["blocked-uri"];o.includes("script-src"),o.includes("style-src"),t.startsWith("http://")&&t.includes("localhost"),o.includes("connect-src")&&(t.includes("openai.com"),t.includes("anthropic.com"),t.includes("ollama")||t.includes("11434")),t.startsWith("chrome-extension://")||t.startsWith("moz-extension://")}exportViolations(){return JSON.stringify(this.violations,null,2)}hasViolationsForDirective(i){return this.violations.some(o=>o.violation["violated-directive"].includes(i))}getViolationsForDirective(i){return this.violations.filter(o=>o.violation["violated-directive"].includes(i))}}const d=new a;export{d as cspReporter};
