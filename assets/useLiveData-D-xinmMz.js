var e=Object.defineProperty,t=(t,r,a)=>((t,r,a)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[r]=a)(t,"symbol"!=typeof r?r+"":r,a);import{l as r}from"./db-CL8uhZCz.js";import{l as a}from"./index-COu0csOc.js";import{f as n,c as i,s,b as o}from"./vendor-CdfxntmD.js";const l={VIRTUAL_SCROLLING:{key:"VIRTUAL_SCROLLING",name:"Virtual Scrolling",description:"Enable virtual scrolling for large data tables",defaultValue:!1,experimental:!0},WEB_WORKERS:{key:"WEB_WORKERS",name:"Web Workers",description:"Offload expensive calculations to web workers",defaultValue:!1,experimental:!0},OPTIMIZED_SORTING:{key:"OPTIMIZED_SORTING",name:"Optimized Sorting",description:"Use optimized sorting algorithms with memoization",defaultValue:!1},SHALLOW_REACTIVITY:{key:"SHALLOW_REACTIVITY",name:"Shallow Reactivity",description:"Use shallowRef for large arrays to reduce reactivity overhead",defaultValue:!1},DEBOUNCED_UPDATES:{key:"DEBOUNCED_UPDATES",name:"Debounced Updates",description:"Batch and debounce rapid data updates",defaultValue:!1},DIFFERENTIAL_UPDATES:{key:"DIFFERENTIAL_UPDATES",name:"Differential Updates",description:"Only update changed data instead of full replacement",defaultValue:!1,experimental:!0,dependencies:["DEBOUNCED_UPDATES"]},DATA_WINDOWING:{key:"DATA_WINDOWING",name:"Data Windowing",description:"Keep only visible data in memory with progressive loading",defaultValue:!1,experimental:!0,dependencies:["VIRTUAL_SCROLLING"]},PERFORMANCE_MONITORING:{key:"PERFORMANCE_MONITORING",name:"Performance Monitoring",description:"Enable performance monitoring overlay and metrics",defaultValue:!1}};const d=new class{constructor(){t(this,"flags"),t(this,"overrides",{});const e={};Object.values(l).forEach(t=>{e[t.key]=t.defaultValue}),this.flags=n(e),this.loadOverrides(),this.applyURLParams()}isEnabled(e){if(e in this.overrides)return this.overrides[e];if(!(e in l))return a.warn(`Unknown feature flag: ${e}`),!1;const t=l[e];if(t.dependencies)for(const r of t.dependencies)if(!this.isEnabled(r))return!1;return this.flags.value[e]??!1}useFlag(e){return i(()=>this.isEnabled(e))}enable(e,t=!0){e in l?(this.flags.value[e]=!0,this.overrides[e]=!0,t&&this.saveOverrides(),a.info(`Feature enabled: ${e}`)):a.warn(`Unknown feature flag: ${e}`)}disable(e,t=!0){e in l?(this.flags.value[e]=!1,this.overrides[e]=!1,t&&this.saveOverrides(),a.info(`Feature disabled: ${e}`)):a.warn(`Unknown feature flag: ${e}`)}toggle(e,t=!0){this.isEnabled(e)?this.disable(e,t):this.enable(e,t)}resetToDefaults(){Object.values(l).forEach(e=>{this.flags.value[e.key]=e.defaultValue}),this.overrides={},this.saveOverrides(),a.info("Feature flags reset to defaults")}enableExperimental(){Object.values(l).forEach(e=>{e.experimental&&this.enable(e.key,!1)}),this.saveOverrides(),a.info("All experimental features enabled")}getState(){const e={};return Object.keys(l).forEach(t=>{e[t]=this.isEnabled(t)}),e}getFlagInfo(e){return l[e]}getAllFlags(){return Object.values(l)}loadOverrides(){try{const e=localStorage.getItem("auditomatic_feature_flags");e&&(this.overrides=JSON.parse(e),Object.entries(this.overrides).forEach(([e,t])=>{e in this.flags.value&&(this.flags.value[e]=t)}),a.info("Loaded feature flag overrides",this.overrides))}catch(e){a.error("Failed to load feature flag overrides",e)}}saveOverrides(){try{localStorage.setItem("auditomatic_feature_flags",JSON.stringify(this.overrides))}catch(e){a.error("Failed to save feature flag overrides",e)}}applyURLParams(){new URLSearchParams(window.location.search).forEach((e,t)=>{if(t.startsWith("feature_")){const r=t.substring(8).toUpperCase(),n="true"===e||"1"===e;r in l&&(this.overrides[r]=n,this.flags.value[r]=n,a.info(`Feature flag set from URL: ${r} = ${n}`))}})}enablePerformanceOptimizations(e="basic"){const t=["VIRTUAL_SCROLLING","WEB_WORKERS","DIFFERENTIAL_UPDATES"],r=["DATA_WINDOWING"];"basic"!==e&&"advanced"!==e&&"all"!==e||["OPTIMIZED_SORTING","SHALLOW_REACTIVITY","DEBOUNCED_UPDATES","PERFORMANCE_MONITORING"].forEach(e=>this.enable(e,!1)),"advanced"!==e&&"all"!==e||t.forEach(e=>this.enable(e,!1)),"all"===e&&r.forEach(e=>this.enable(e,!1)),this.saveOverrides(),a.info(`Performance optimizations enabled: ${e}`)}};const c=new class{constructor(){t(this,"metrics",[]),t(this,"recording",!1),t(this,"recordingStartTime",null),t(this,"overlayElement",null),t(this,"rafId",null),t(this,"lastFrameTime",0),t(this,"fpsHistory",[]),t(this,"componentRenderCounts",{}),t(this,"measurementMap",new Map)}calculateFPS(){const e=performance.now();if(0===this.lastFrameTime)return this.lastFrameTime=e,60;const t=1e3/(e-this.lastFrameTime);return this.lastFrameTime=e,this.fpsHistory.push(t),this.fpsHistory.length>60&&this.fpsHistory.shift(),this.fpsHistory.reduce((e,t)=>e+t,0)/this.fpsHistory.length}getMemoryUsage(){if("memory"in performance&&performance.memory){return performance.memory.usedJSHeapSize/1048576}return 0}getDOMNodeCount(){return document.querySelectorAll("*").length}start(e){this.measurementMap.set(e,performance.now())}end(e){const t=this.measurementMap.get(e);if(!t)return console.warn(`No start time found for label: ${e}`),0;const r=performance.now()-t;return this.measurementMap.delete(e),r}measure(e,t){const r=performance.now(),a=t(),n=performance.now()-r;if(this.recording){this.getCurrentMetrics().renderTime=n}return a}trackComponentRender(e){this.componentRenderCounts[e]=(this.componentRenderCounts[e]||0)+1}getCurrentMetrics(){return{fps:this.calculateFPS(),renderTime:0,updateTime:0,memoryUsage:this.getMemoryUsage(),domNodes:this.getDOMNodeCount(),componentRenders:{...this.componentRenderCounts}}}showOverlay(e){e&&!this.overlayElement?(this.createOverlay(),this.startOverlayUpdate()):!e&&this.overlayElement&&this.destroyOverlay()}createOverlay(){this.overlayElement=document.createElement("div"),this.overlayElement.id="performance-overlay",this.overlayElement.style.cssText="\n      position: fixed;\n      top: 10px;\n      right: 10px;\n      background: rgba(0, 0, 0, 0.8);\n      color: #0f0;\n      font-family: monospace;\n      font-size: 12px;\n      padding: 10px;\n      border-radius: 5px;\n      z-index: 999999;\n      pointer-events: none;\n      min-width: 200px;\n    ",document.body.appendChild(this.overlayElement)}destroyOverlay(){this.overlayElement&&(document.body.removeChild(this.overlayElement),this.overlayElement=null),null!==this.rafId&&(cancelAnimationFrame(this.rafId),this.rafId=null)}updateOverlay(){if(!this.overlayElement)return;const e=this.getCurrentMetrics(),t=e.memoryUsage>100?"#f00":e.memoryUsage>50?"#ff0":"#0f0",r=e.fps<30?"#f00":e.fps<55?"#ff0":"#0f0",a=e.domNodes>5e3?"#f00":e.domNodes>2e3?"#ff0":"#0f0";this.overlayElement.innerHTML=`\n      <div style="margin-bottom: 5px; font-weight: bold;">Performance Monitor</div>\n      <div>FPS: <span style="color: ${r}">${e.fps.toFixed(1)}</span></div>\n      <div>Memory: <span style="color: ${t}">${e.memoryUsage.toFixed(1)} MB</span></div>\n      <div>DOM Nodes: <span style="color: ${a}">${e.domNodes}</span></div>\n      ${e.renderTime>0?`<div>Render: ${e.renderTime.toFixed(1)}ms</div>`:""}\n      ${e.updateTime>0?`<div>Update: ${e.updateTime.toFixed(1)}ms</div>`:""}\n    `}startOverlayUpdate(){const e=()=>{this.updateOverlay(),this.rafId=requestAnimationFrame(e)};e()}startRecording(){this.recording=!0,this.recordingStartTime=new Date,this.metrics=[],this.componentRenderCounts={};const e=setInterval(()=>{this.recording?this.metrics.push(this.getCurrentMetrics()):clearInterval(e)},100)}stopRecording(){if(!this.recording||!this.recordingStartTime)throw new Error("No recording in progress");this.recording=!1;const e=new Date,t={avgFps:this.metrics.reduce((e,t)=>e+t.fps,0)/this.metrics.length||0,avgRenderTime:this.metrics.reduce((e,t)=>e+t.renderTime,0)/this.metrics.length||0,avgUpdateTime:this.metrics.reduce((e,t)=>e+t.updateTime,0)/this.metrics.length||0,peakMemoryUsage:Math.max(...this.metrics.map(e=>e.memoryUsage)),totalRenders:Object.values(this.componentRenderCounts).reduce((e,t)=>e+t,0)},r={startTime:this.recordingStartTime,endTime:e,duration:e.getTime()-this.recordingStartTime.getTime(),metrics:this.metrics,summary:t};return this.recordingStartTime=null,this.metrics=[],r}exportReport(e){const t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),r=URL.createObjectURL(t),a=document.createElement("a");a.href=r,a.download=`performance-report-${e.startTime.toISOString()}.json`,a.click(),URL.revokeObjectURL(r)}logWarning(e,t){console.warn(`[Performance Warning] ${e}`,t)}checkPerformance(){const e=this.getCurrentMetrics();e.fps<30&&this.logWarning(`Low FPS detected: ${e.fps.toFixed(1)}`,{fps:e.fps}),e.memoryUsage>100&&this.logWarning(`High memory usage: ${e.memoryUsage.toFixed(1)} MB`,{memoryUsage:e.memoryUsage}),e.domNodes>5e3&&this.logWarning(`Excessive DOM nodes: ${e.domNodes}`,{domNodes:e.domNodes})}},m={debounce:100,batchSize:1e3,mode:"replace",onError:e=>a.error("LiveData error:",e),shallow:!0,trackPerformance:!1};function u(e,t={}){const i={...m,...t};d.isEnabled("SHALLOW_REACTIVITY")&&(i.shallow=!0),d.isEnabled("DEBOUNCED_UPDATES")&&!t.debounce&&(i.debounce=100);const l=s([]),u=n(!0),f=n(null);let h=null,p=null,g=null;const v=`useLiveData-${Date.now()}`;function y(e){i.trackPerformance&&c.start(`${v}-update`),g=e,null!==p&&clearTimeout(p),p=window.setTimeout(()=>{if(null!==g)try{if("diff"===i.mode&&d.isEnabled("DIFFERENTIAL_UPDATES")?function(e){if(l.value.length!==e.length)return void(l.value=e);let t=!1;for(let r=0;r<e.length;r++)if(l.value[r]!==e[r]){t=!0;break}t&&(l.value=e)}(g):l.value=g,u.value=!1,f.value=null,i.trackPerformance){const e=c.end(`${v}-update`);e>16&&c.logWarning(`Slow data update: ${e}ms for ${g.length} items`)}}catch(e){const t=e instanceof Error?e:new Error(String(e));f.value=t,i.onError(t)}finally{g=null,p=null}},i.debounce)}async function E(){const t=await e();return Array.isArray(t)?t:t&&"object"==typeof t&&"toArray"in t?await t.toArray():[]}function b(){h&&(h.unsubscribe(),h=null),null!==p&&(clearTimeout(p),p=null),g=null}return function(){h&&(h.unsubscribe(),h=null);try{h=r(E).subscribe({next:e=>{if(i.trackPerformance&&a.debug(`LiveData update received: ${e.length} items`),e.length>i.batchSize){const t=[];for(let r=0;r<e.length;r+=i.batchSize)t.push(e.slice(r,r+i.batchSize));y(t[0]),t.slice(1).forEach((e,t)=>{setTimeout(()=>{y([...l.value,...e])},50*(t+1))})}else y(e)},error:e=>{a.error("LiveData subscription error:",e),f.value=e instanceof Error?e:new Error(String(e)),u.value=!1,i.onError(f.value)}})}catch(e){const t=e instanceof Error?e:new Error(String(e));f.value=t,u.value=!1,i.onError(t)}}(),o(()=>{b()}),{data:l,loading:u,error:f,refresh:async function(){u.value=!0,f.value=null;try{y(await E())}catch(e){const t=e instanceof Error?e:new Error(String(e));f.value=t,u.value=!1,i.onError(t)}},destroy:b}}export{d as f,c as p,u};
