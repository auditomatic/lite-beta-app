const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./model-discovery-BZOGRUXK.js","./index-JPKDQHeA.js","./vendor-BiapkIQZ.js","./db-CL8uhZCz.js","./index-D-paDmtB.css","./registry-CD_hKmbW.js"])))=>i.map(i=>d[i]);
import{d as e,a as o}from"./index-JPKDQHeA.js";import{ag as a,f as t,c as l}from"./vendor-BiapkIQZ.js";import{l as n}from"./db-CL8uhZCz.js";import{l as s}from"./logger.service-_k__GSpu.js";const d=a("models",()=>{const a=t([]),d=t(!0),i=t({litellm:"idle",ollama:"idle",openrouter:"idle"});let r=null;const u=l(()=>a.value),c=l(()=>{const e={};for(const o of a.value)e[o.provider]||(e[o.provider]=[]),e[o.provider].push(o);for(const o in e)e[o].sort((e,o)=>e.enabled!==o.enabled?e.enabled?-1:1:e.displayName.localeCompare(o.displayName));return e}),m=l(()=>a.value.filter(e=>e.enabled)),f=l(()=>e=>c.value[e]||[]),v=l(()=>(e,o)=>a.value.find(a=>a.id===`${e}:${o}`));async function p(o,a){await e.models.update(o,{...a,modifiedAt:new Date})}async function w(){if(0===await e.models.where("enabled").equals(1).count()){const{modelDiscovery:a}=await o(async()=>{const{modelDiscovery:e}=await import("./model-discovery-BZOGRUXK.js");return{modelDiscovery:e}},__vite__mapDeps([0,1,2,3,4,5]),import.meta.url);0===await e.models.count()?await a.refreshAll():await a.enableOpenRouterFavorites()}}return async function(){await e.open(),r=n(()=>e.models.toArray()).subscribe({next:e=>{a.value=e,d.value=!1},error:e=>{s.error("Models subscription error",e),d.value=!1}})}().then(()=>{w()}),{models:l(()=>a.value),isLoading:l(()=>d.value),loadingStatus:l(()=>i.value),allModels:u,modelsByProvider:c,enabledModels:m,getModelsForProvider:f,getModel:v,addModel:async function(o){const a=new Date,t={...o,discoveredAt:a,modifiedAt:a};await e.models.put(t)},addModels:async function(o){const a=new Date,t=o.map(e=>({...e,discoveredAt:a,modifiedAt:a}));await e.models.bulkPut(t)},updateModel:p,toggleModel:async function(e,o){await p(e,{enabled:o})},toggleProvider:async function(o,t){const l=a.value.filter(e=>e.provider===o).map(e=>({key:e.id,changes:{enabled:t,modifiedAt:new Date}}));await e.models.bulkUpdate(l)},deleteModel:async function(o){const a=await e.models.get(o);if(!a||"user"!==a.source)throw new Error("Can only delete user-created models");await e.models.delete(o)},clearModels:async function(){await e.models.clear()},setLoadingStatus:function(e,o){i.value[e]=o},setIsLoading:function(e){d.value=e},ensureDefaultsEnabled:w,cleanup:function(){r?.unsubscribe()}}});export{d as u};
