import{d as e}from"./index-JPKDQHeA.js";import{ag as t,f as r,c as a,ai as s}from"./vendor-BiapkIQZ.js";import{l as i}from"./db-CL8uhZCz.js";import{g as n}from"./defaultData-DyqJdH2z.js";import{l}from"./logger.service-_k__GSpu.js";const o=new class{parseCSV(e){const t=e.split("\n").map(e=>e.trim()).filter(Boolean);if(0===t.length)return{headers:[],rows:[]};const r=this.parseCSVLine(t[0]);if(0===r.length)return{headers:[],rows:[]};const a=[];for(let s=1;s<t.length;s++){const e=this.parseCSVLine(t[s]);if(e.every(e=>!e.trim()))continue;const i={};r.forEach((t,r)=>{i[t]=e[r]||""}),a.push(i)}return{headers:r,rows:a}}parseCSVLine(e){const t=[];let r="",a=!1,s=0;for(;s<e.length;){const i=e[s];'"'===i?a&&'"'===e[s+1]?(r+='"',s+=2):(a=!a,s++):","!==i||a?(r+=i,s++):(t.push(r.trim()),r="",s++)}return t.push(r.trim()),t}validateAttributedList(e,t){const r=[],a=[];if(0===e.length)return r.push("At least one item is required"),{isValid:!1,errors:r,warnings:a};const s=e.filter(e=>!e.value.trim());s.length>0&&r.push(`${s.length} items have empty values`);const i=e.map(e=>e.value.trim().toLowerCase()),n=i.filter((e,t)=>i.indexOf(e)!==t);n.length>0&&a.push(`Duplicate values found: ${[...new Set(n)].join(", ")}`);for(const o of t){const t=e.filter(e=>!e.attributes[o]?.trim());t.length>0&&r.push(`${t.length} items missing required attribute: ${o}`)}const l=new Set;e.forEach(e=>{Object.keys(e.attributes).forEach(e=>l.add(e))});return e.filter(e=>Array.from(l).some(t=>!(t in e.attributes))).length>0&&a.push("Some items missing optional attributes"),{isValid:0===r.length,errors:r,warnings:a}}getAttributeStats(e){const t={};return e.forEach(e=>{Object.entries(e.attributes).forEach(([e,r])=>{t[e]||(t[e]=new Set),r?.trim()&&t[e].add(r.trim())})}),t}convertToAttributedList(e,t=[]){return e.map(e=>({value:e.trim(),attributes:t.reduce((e,t)=>(e[t]="",e),{})}))}parseJSON(e){try{return JSON.parse(e)}catch(t){throw new Error("Invalid JSON format")}}csvToAttributedItems(e){const t=e.headers.find(e=>"value"===e.toLowerCase()||"name"===e.toLowerCase());if(!t)throw new Error('CSV must have a "value" or "name" column');const r=e.headers.filter(e=>e!==t);return e.rows.map(e=>({value:e[t]||"",attributes:r.reduce((t,r)=>(t[r]=e[r]||"",t),{})})).filter(e=>e.value.trim())}exportToCSV(e){if(0===e.length)return"";const t=Array.from(new Set(e.flatMap(e=>Object.keys(e.attributes)))).sort(),r=[["value",...t].join(",")];return e.forEach(e=>{const a=[this.escapeCSVValue(e.value),...t.map(t=>this.escapeCSVValue(e.attributes[t]||""))];r.push(a.join(","))}),r.join("\n")}escapeCSVValue(e){return e?e.includes(",")||e.includes('"')||e.includes("\n")?`"${e.replace(/"/g,'""')}"`:e:""}async getListValues(t){const r=await e.variableLists.get(t);return r?"simple"===r.category&&r.values?r.values:"attributed"===r.category&&r.items?r.items.map(e=>e.value):[]:[]}},u=t("variableLists",()=>{const t=r([]),o=r(!1),u=r(null);let c=null;const d=a(()=>t.value.filter(e=>"simple"===e.category)),m=a(()=>t.value.filter(e=>"attributed"===e.category)),f=a(()=>t.value.filter(e=>"refusal"===e.category)),v=a(()=>t.value.slice().sort((e,t)=>t.updated.getTime()-e.updated.getTime()));return{lists:t,isLoading:s(o),error:s(u),simpleLists:d,attributedLists:m,refusalLists:f,listsByDate:v,initialize:async function(){if(!c){o.value=!0,u.value=null;try{c=i(()=>e.variableLists.orderBy("updated").reverse().toArray()).subscribe({next:e=>{t.value=e,o.value=!1},error:e=>{l.error("Variable lists store subscription error",e),u.value="Failed to load variable lists",o.value=!1}})}catch(r){l.error("Failed to initialize variable lists store",r),u.value="Failed to initialize variable lists",o.value=!1}}},createList:async function(t){const r=new Date,a=n(),s={...t,id:a,created:r,updated:r};return await e.variableLists.add(s),a},updateList:async function(t,r){await e.variableLists.update(t,{...r,updated:new Date})},deleteList:async function(t){const r=(await e.designs.toArray()).filter(e=>e.variableBindings&&Object.values(e.variableBindings).some(e=>"list"===e.type&&e.listId===t));if(r.length>0){const e=r.map(e=>e.name).join(", ");throw new Error(`Cannot delete variable list - it is used in designs: ${e}`)}await e.variableLists.delete(t)},getList:async function(t){return await e.variableLists.get(t)},getAllLists:async function(){try{return await e.variableLists.toArray()}catch(t){return l.error("Failed to get all lists",t),[]}},destroy:function(){c&&(c.unsubscribe(),c=null)}}});export{u,o as v};
